for $d1 in doc("large-data.xml")/d,
    $d2 in doc("large-data.xml")/d,
    $d3 in doc("large-data.xml")/d,
    $d4 in doc("large-data.xml")/d,
    $id1 in $d1/id/text(),
    $id2 in $d2/id/text(),
    $id3 in $d3/id/text(),
    $id4 in $d4/id/text(),
    $a1 in $d1/a1/text(),
    $a2 in $d2/a6/text(),
    $a3 in $d3/a2/text(),
    $a4 in $d4/a5/text()
where $a1 eq $a2 and $a3 eq $a4 and $a1 eq $a3
return <d>{<id1>{$id1}</id1>,<id2>{$id2}</id2>,<id3>{$id3}</id3>,<id4>{$id4}</id4>}</d>

1.for $tuple in join(
    join(
        for $b in doc("test2.xml")//BOOK,
            $btitle in $b/TITLE,
            $baid in $b/AUTHORID
        return <tuple>{
            <btitle>{
                $b/TITLE/text()
            }</btitle>,<baid>{
                $b/AUTHORID/text()
            }</baid>
        }</tuple>
    ,
        for $a in doc("test2.xml")//AUTHOR,
            $aid in $a/ID,
            $an in $a/NAME,
            $fname in $an/FIRST,
            $lname in $an/LAST,
            $anid in $a/NATIONID
        return <tuple>{
            <aid>{
                $a/ID/text()
            }</aid>,<an>{
                $a/NAME/text()
            }</an>,<fname>{
                $an/FIRST/text()
            }</fname>,<lname>{
                $an/LAST/text()
            }</lname>,<anid>{
                $a/NATIONID/text()
            }</anid>
        }</tuple>
    ,
        [baid],[aid]
    )
,
    for $n in doc("test2.xml")//NATION,
        $nid in $n/ID,
        $nname in $n/FULLNAME
    return <tuple>{
        <nid>{
            $n/ID/text()
        }</nid>,<nname>{
            $n/FULLNAME/text()
        }</nname>
    }</tuple>
,
    [anid],[nid]
)
return <BOOK>{
    <TITLE>{
        $tuple/btitle/*
    }</TITLE>,<AUTHOR>{
        $tuple/fname/*
    }</AUTHOR>,<NATION>{
        $tuple/nname/*
    }</NATION>
}</BOOK>


1.for $tuple in join(
    join(
        for $b in doc("test2.xml")//BOOK,
            $btitle in $b/TITLE,
            $baid in $b/AUTHORID
        return <tuple>{
            <btitle>{
                $b/TITLE
            }</btitle>,<baid>{
                $b/AUTHORID
            }</baid>
        }</tuple>
    ,
        for $a in doc("test2.xml")//AUTHOR,
            $aid in $a/ID,
            $an in $a/NAME,
            $fname in $an/FIRST,
            $lname in $an/LAST,
            $anid in $a/NATIONID
        return <tuple>{
            <aid>{
                $a/ID
            }</aid>,<an>{
                $a/NAME
            }</an>,<fname>{
                $an/FIRST
            }</fname>,<lname>{
                $an/LAST
            }</lname>,<anid>{
                $a/NATIONID
            }</anid>
        }</tuple>
    ,
        [baid],[aid]
    )
,
    for $n in doc("test2.xml")//NATION,
        $nid in $n/ID,
        $nname in $n/FULLNAME
    return <tuple>{
        <nid>{
            $n/ID
        }</nid>,<nname>{
            $n/FULLNAME
        }</nname>
    }</tuple>
,
    [anid],[nid]
)
return <BOOK>{
    <TITLE>{
        $tuple/btitle/*/text()
    }</TITLE>,<AUTHOR>{
        $tuple/fname/*/text()
    }</AUTHOR>,<NATION>{
        $tuple/nname/*/text()
    }</NATION>
}</BOOK>



1.for $b in doc("input")/book,
$a in doc("input")/entry,
$tb in $b/title,
$ta in $a/title
where $tb eq $ta
return
<book-with-prices>
{ $tb,
<priceReview>{ $a/price }</priceReview>,
<price>{ $b/price }</price> }
</book-with-prices>


1.<result>{
    for $bs in doc("test.xml")//BOOKSHELF
    return $bs/BOOK/AUTHOR
}</result>

1.<acts>{
 for $a in doc("j_caesar.xml")//ACT
 where not empty(
  for $sp in $a/SCENE/SPEECH
  where ($sp/SPEAKER/text() = "FLAVIUS" and $sp/../TITLE/text()="SCENE I.  Rome. A street.")
  return <speaker>{ $sp/text() }</speaker> )
 return <act>{$a/TITLE/text()}</act> }</acts>

1.<result>{
for $a in doc("j_caesar.xml")//ACT,
$sc in $a//SCENE,
$sp in $sc/SPEECH
where $sp/LINE/text() = "Et tu, Brute! Then fall, Caesar."
return <who>{$sp/SPEAKER/text()}</who>,
<when>{<act>{$a/TITLE/text()}</act>,
<scene>{$sc/TITLE/text()}</scene>}
<when>
}</result>

1.<result>{
for $a in doc("j_caesar.xml")//ACT,
$sc in $a//SCENE,
$sp in $sc/SPEECH
where $sp/LINE/text()="Et tu, Brute! Then fall, Caesar."
return <who>{$sp/SPEAKER/text()}</who>,
<when>{<act>{$a/TITLE/text()}</act>,
<scene>{$sc/TITLE/text()}</scene>}
</when>
}</result>

1.<result>{for $a in doc("test.xml")//BOOK
return <hahaha>{$a/TITLE/text()}</what>}</hahaha>}<result>

1.<result>{for $a in doc("j_caesar.xml")//ACT
return <what>{$a}</what>}</result>

<result>{
for $a in doc("j_caesar.xml")//ACT,
$sc in $a//SCENE,
$sp in $sc/SPEECH
where $sp/LINE/text()="Et tu, Brute! Then fall, Caesar."
return <who>{$sp/SPEAKER/text()}</who>,
<when>{<act>{$a/TITLE/text()}</act>,
<scene>{$sc/TITLE/text()}</scene>}
</when>
}</result>